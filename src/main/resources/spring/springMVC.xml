<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:component-scan base-package="com.wx.server.web" />

	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" >
		<mvc:message-converters register-defaults="true"> 
			<bean class="com.wx.server.web.converter.UTF8StringHttpMessageConverter"/> 
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
							<value>text/pain;charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- 前台资源 -->
	<mvc:resources mapping="/res/**" location="/res/" />
	<!-- 后台资源 -->
	<mvc:resources mapping="/backstage/**" location="/backstage/" />
	
	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<bean id="evnInterceptor" class="com.wx.server.interceptor.EvnInterceptor"/>
		<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
		<mvc:interceptor>
			<mvc:mapping path="/wxbackstage/**"/>
			<bean class="com.wx.server.interceptor.BackstageEvnInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true"></property><!-- 这里是是否启用扩展名支持 -->
		<property name="ignoreAcceptHeader" value="true"></property><!-- 这里是否忽略掉accept header -->
		<property name="mediaTypes">
			<map>
				<entry key="xml" value="application/xml"/>  
				<entry key="json" value="application/json"/>  
				<entry key="xls" value="application/vnd.ms-excel"/>  
			</map>
		</property>
		<property name="defaultContentType" value="text/html" />
	</bean>

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="0" />
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
		<property name="viewResolvers">
			<list>
				<ref bean="frontViewResolver" />
				<ref bean="adminViewResolver" />
				<ref bean="jspViewResolver" />
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView">
					<property name="charset" value="UTF-8" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter" />
	
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/view/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
</beans>